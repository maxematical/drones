The goal of this project is to create an ENGINEERING and PROGRAMMING-BASED game where you have to script "drones" to
build a space colony and collect resources to keep going.

The player will have to use their creativity and try different approaches to building their robots to gather resources
and explore locations.

The drones operate on their own, so the challenge is primarily designing them in the right way.

Drones will be scripted using either:
- custom, node-based solution (most control, more flexibility for the developer, less for the user, harder to program?)
- lua (less control, more advanced scripting options, more complicated for the user)
- something else?

Lua might be better, because it's hard to make complicated strategies and designs with just nodes. At that point you
need to implement loops, etc. in your node-based language and it just becomes cumbersome.

The game takes place on a 2D grid.

Example gameplay:
- The robots set up a "hive" where they can store their possessions and are safe from enemies.
- robots have "wifi" (can use signals between different robots)
- Other robots can sense signals from other robots, so it can be used to find out where you are. Now you have strategies
  where you avoid sending signals when you think baddies could be nearby. Or you send a signal to try to fool them
- Encountering a "Dreadnought" robot, that is composed of multiple drones moving together, where the drones on the
  outside tend to be armor or guns and the drones on the inside are powering the other ones




Other ideas
- coupling systems and mechanics together makes them more interesting to work with. E.g. the "Bee Dance" is an example
  of using a simple movement system to communicate. Players should be using the systems in different and creative ways.
- interactions with other drone colonies, these can often be adversarial and leads to arms races as players try
  different strategies to counter each other
- this game can have other drone factions without being MP. We can pre-design certain drone factions that you can fight
  in SP.
- how do we make combat between drones interesting? The game should rest strongly upon strategy and predicting or
  countering your opponent.
- can place different hardware pieces on your drone that give it access to different abilities. these, however will
  affect stats like its weight, speed, etc -- design different drones for different roles
- drones are fragile -- you cant just brute force your way through things, you need to think about them before they
  happen
- e.g. armor components, some drones could be composed mostly of armor and then are used as "moving shields", where they
  protect more fragile drones inside
- components on a drone have a location, so they could e.g. have armor on front but not on back, guns on certain side,
  etc. Makes rotation/movement actually important
- weapons - lasers need power(which can be redirected from other subsystems), but don't require physical weight for
  ammo. Gatlings need (heavy) ammunition to be carried, don't need lots of power, also apply physical momentum to
  whatever they hit
- add bombs or something else to counter "wall-of-gatling" designs??
- drones need some way to transfer power and inventory between each other -- charging platforms?
- heat mechanic? another tradeoff to constant activity, along with power
- components can only scan in a line/arc around the drone -- makes rotating and moving around more important since
  otherwise these components will lose effectiveness
- randomize gameplay factors to avoid having a single meta
- implement pathing algorithms for the player so they don't have to get caught up on this

- mechanics/systems in the game: Power, Movement, Weapons/combat, Signals/comms

More ideas 7/7
- From a game design perspective: We want to give the player explicit goals, but there are many ways of achieving these
  goals
  - past the tutorial missions, don't just say 'program drones to gather X' or something like that, it's too
    straightforward
- Think about environment: how can we make it more interesting/challenging? How can we give players multiple approaches
  to deal with those challenges?
  - exploring abandoned wrecks-- gives a lot more environmental possibilities, doesn't necessarily have to be realistic,
    e.g. it can have an atmosphere
  - heat mechanic and ambient heat level -- straightforward challenge requiring player to manage drone heat level along
    with power
  - heat can be more interesting if it can physically dissipate around an area and then make it become more hot. That
    is, some areas can be more hot or cold than others, which influenced by the heat production/absorption of things in
    that area. Thus closely compacted drones could suffer as they can't dissipate heat as easily

More ideas 7/8
- Within each task, or "challenge" we give the player, there should be accommodation for different skill levels, where
  higher skilled players can complete the task better/more efficiently than other players.

  - We see this in other games as things like a "score", where even if you finish the level you can keep improving by
    getting a higher score. Or in Deep Rock Galactic, where one of the objectives is to look towards and shoot at an
    enemy, but higher skilled players can aim more precisely at the weakpoints on enemies and thus kill them faster than
    other players who can JUST aim imprecisely and shoot

  - The player shouldn't have to be super good at scripting and/or the game to get success, better scripts should give
    them an advantage but we don't want e.g. you have to write an A* algorithm just to move around

  - Idea: Let the player manually control the navigation of drones like an RTS. This way, players that aren't great
    at scripting still can have their drones actually go somewhere (reducing "barrier to success") but also so that
    gameplay is a bit faster , otherwise exploring is tedious and it's hard to write AI that detects rooms and tries to
    explore them (if we even have rooms)

- Idea: have a fog of war, can be computed pretty quickly on gpu (no cpu cost) by giving it array of circles where we
  want to reveal fog of war (e.g. 1 circle around each drone), then can use postprocess and/or stencil buffer to hide
  pixels not in at least one circle. Alternative is in kotlin to have a counter on each tile for how many drones are
  near it, and update the counters around each drone as it moves around. Then send data to gpu, but this might be more
  processing intensive and has obvious pixelation/tiling effect

More ideas 7/9

- interesting idea: interaction between drones, more complicated plans can be made if drones can interact and work
  together more efficiently

- mining operations - encourage drones to work together by making them hold an object like DRG that makes them go slower
  Mining is more efficient if some drones can carry stuff and some will just mine

- fairly straightforward way of rewarding higher skill for the same task, is to make simply programming a drone to do
  a task simple, but programming it to do so efficiently more difficult (and multiple aspects of efficiency can be
  achieved using different algorithms). E.g. it is easy to script drones to point their mining laser at the ore and
  mine it. But what if you can get more ore by ensuring the mining laser only is hitting small chunks of stone and not
  the ore itself? Better scripts will avoid hitting/destroying ore unnecessarily

More ideas 7/13

- power generation: How can we integrate power into the game (if we have it at all)?

  - Individual drone power: range and operational time of a drone is influenced by their power capacity and usage.
    Can optimize drones to be more power efficient by e.g. optimizing the script, changing the components, but that
    could reduce their overall effectiveness. Drones recharge from base or possibly even other drones.

  - Overall power: (Not sure if/how we should include this) Drones can recharge from the base, but what about the base's
    power? Is it infinite or do we have to get it in some way?

  - Idea: power generation depends on territory acquisition and thus the player must hold more ground in order to have
    enough power

  - Idea: ways to generate power but they are in dangerous areas that require specialized drones to operate in
